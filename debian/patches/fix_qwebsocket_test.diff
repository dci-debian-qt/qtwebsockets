Description: fix failing qwebsocket test on some architectures
Author: Helge Deller <deller@gmx.de>
Forwarded: not-yet
Last-Update: 2015-01-25

--- a/tests/auto/qwebsocket/tst_qwebsocket.cpp
+++ b/tests/auto/qwebsocket/tst_qwebsocket.cpp
@@ -50,9 +50,6 @@
     QHostAddress hostAddress() const { return m_pWebSocketServer->serverAddress(); }
     quint16 port() const { return m_pWebSocketServer->serverPort(); }
 
-Q_SIGNALS:
-    void closed();
-
 private Q_SLOTS:
     void onNewConnection();
     void processTextMessage(QString message);
@@ -71,9 +68,8 @@
     m_clients()
 {
     if (m_pWebSocketServer->listen()) {
-        connect(m_pWebSocketServer, &QWebSocketServer::newConnection,
-                this, &EchoServer::onNewConnection);
-        connect(m_pWebSocketServer, &QWebSocketServer::closed, this, &EchoServer::closed);
+        connect(m_pWebSocketServer, SIGNAL(newConnection()),
+                this, SLOT(onNewConnection()));
     }
 }
 
@@ -87,9 +83,9 @@
 {
     QWebSocket *pSocket = m_pWebSocketServer->nextPendingConnection();
 
-    connect(pSocket, &QWebSocket::textMessageReceived, this, &EchoServer::processTextMessage);
-    connect(pSocket, &QWebSocket::binaryMessageReceived, this, &EchoServer::processBinaryMessage);
-    connect(pSocket, &QWebSocket::disconnected, this, &EchoServer::socketDisconnected);
+    connect(pSocket, SIGNAL(textMessageReceived(QString)), this, SLOT(processTextMessage(QString)));
+    connect(pSocket, SIGNAL(binaryMessageReceived(QByteArray)), this, SLOT(processBinaryMessage(QByteArray)));
+    connect(pSocket, SIGNAL(disconnected()), this, SLOT(socketDisconnected()));
 
     m_clients << pSocket;
 }
